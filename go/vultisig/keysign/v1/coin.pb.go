// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: vultisig/keysign/v1/coin.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Coin only contains information that the app can use it to identify the relevant coin in the vault
type Coin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain           string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	Ticker          string `protobuf:"bytes,2,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Address         string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	ContractAddress string `protobuf:"bytes,4,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Decimals        int32  `protobuf:"varint,5,opt,name=decimals,proto3" json:"decimals,omitempty"`
	PriceProviderId string `protobuf:"bytes,6,opt,name=price_provider_id,json=priceProviderId,proto3" json:"price_provider_id,omitempty"`
	IsNativeToken   bool   `protobuf:"varint,7,opt,name=is_native_token,json=isNativeToken,proto3" json:"is_native_token,omitempty"`
	HexPublicKey    string `protobuf:"bytes,8,opt,name=hex_public_key,json=hexPublicKey,proto3" json:"hex_public_key,omitempty"`
	Logo            string `protobuf:"bytes,9,opt,name=logo,proto3" json:"logo,omitempty"`
}

func (x *Coin) Reset() {
	*x = Coin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vultisig_keysign_v1_coin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_coin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_coin_proto_rawDescGZIP(), []int{0}
}

func (x *Coin) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *Coin) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *Coin) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Coin) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *Coin) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *Coin) GetPriceProviderId() string {
	if x != nil {
		return x.PriceProviderId
	}
	return ""
}

func (x *Coin) GetIsNativeToken() bool {
	if x != nil {
		return x.IsNativeToken
	}
	return false
}

func (x *Coin) GetHexPublicKey() string {
	if x != nil {
		return x.HexPublicKey
	}
	return ""
}

func (x *Coin) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

var File_vultisig_keysign_v1_coin_proto protoreflect.FileDescriptor

var file_vultisig_keysign_v1_coin_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x76, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x69,
	0x67, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x76, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x69,
	0x67, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0xa3, 0x02, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x65, 0x78, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65, 0x78, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x42, 0x2f, 0x0a, 0x13, 0x76,
	0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x2e,
	0x76, 0x31, 0x5a, 0x13, 0x76, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x2f, 0x6b, 0x65, 0x79,
	0x73, 0x69, 0x67, 0x6e, 0x2f, 0x76, 0x31, 0xba, 0x02, 0x02, 0x56, 0x53, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vultisig_keysign_v1_coin_proto_rawDescOnce sync.Once
	file_vultisig_keysign_v1_coin_proto_rawDescData = file_vultisig_keysign_v1_coin_proto_rawDesc
)

func file_vultisig_keysign_v1_coin_proto_rawDescGZIP() []byte {
	file_vultisig_keysign_v1_coin_proto_rawDescOnce.Do(func() {
		file_vultisig_keysign_v1_coin_proto_rawDescData = protoimpl.X.CompressGZIP(file_vultisig_keysign_v1_coin_proto_rawDescData)
	})
	return file_vultisig_keysign_v1_coin_proto_rawDescData
}

var file_vultisig_keysign_v1_coin_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_vultisig_keysign_v1_coin_proto_goTypes = []any{
	(*Coin)(nil), // 0: vultisig.keysign.v1.Coin
}
var file_vultisig_keysign_v1_coin_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_vultisig_keysign_v1_coin_proto_init() }
func file_vultisig_keysign_v1_coin_proto_init() {
	if File_vultisig_keysign_v1_coin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vultisig_keysign_v1_coin_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Coin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vultisig_keysign_v1_coin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vultisig_keysign_v1_coin_proto_goTypes,
		DependencyIndexes: file_vultisig_keysign_v1_coin_proto_depIdxs,
		MessageInfos:      file_vultisig_keysign_v1_coin_proto_msgTypes,
	}.Build()
	File_vultisig_keysign_v1_coin_proto = out.File
	file_vultisig_keysign_v1_coin_proto_rawDesc = nil
	file_vultisig_keysign_v1_coin_proto_goTypes = nil
	file_vultisig_keysign_v1_coin_proto_depIdxs = nil
}
